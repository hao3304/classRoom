query AdminAlarms($input: QAlarm!) {
  alarms(input: $input) {
    size
    total
    data {
      id
      name
      station
      device
      unit
      sensor_unit
      sensor_name
      expression
      template
      level
      status
      weight
      created
      changed
    }
  }
}

query Alarm($id: String!) {
  alarm(id: $id) {
    id
    name
    sensor_unit
    expression
    sensors {
      name
    }
  }
}

query AlarmSensor($id: String!, $page: Int!, $limit: Int!, $count: Boolean!) {
  alarm(id: $id) {
    id
    name
    sensor_unit
    expression
    sensors(page: $page, limit: $limit, count: $count) {
      total
      size
      data {
        id
        o_source {
          o_station {
            name
            o_area {
              name
            }
          }
          o_device {
            name
          }
        }
        name
      }
    }
  }
}

query AlarmSensors($id: String!, $page: Int!, $limit: Int!, $count: Boolean!) {
  alarm(id: $id) {
    id
    name
    sensor_unit
    expression
    alarm_sensors(page: $page, limit: $limit, count: $count) {
      total
      size
      data {
        id
        o_station {
          name
        }
        o_device {
          name
        }
        o_source {
          name
        }
        o_sensor {
          id
        }
      }
    }
  }
}

mutation AlarmUpdate($id: String!, $input: UpdAlarm!) {
  alarm_update(id: $id, input: $input)
}

mutation AlarmCreate($input: NewAlarm!) {
  alarm_create(input: $input) {
    id
    name
    sensor_unit
    expression
  }
}

mutation AlarmRemove($id: String!) {
  alarm_remove(id: $id)
}

mutation AlarmAssign(
  $alarm: String
  $devices: [String!]
  $stations: [String!]
  $sensors: [String!]
) {
  alarm_assign(
    alarm: $alarm
    stations: $stations
    devices: $devices
    sensors: $sensors
  )
}

mutation AlarmRevoke($alarm: String, $sensors: [String!]) {
  alarm_revoke(alarm: $alarm, sensors: $sensors)
}

query AlarmStatByUnit {
  stats: alarm_stat_by_unit {
    name
    unit
    num
  }
}
